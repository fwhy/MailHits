on:
  push:
    tags:
      - 'v*'

name: Release

jobs:
  release:
    name: Create release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Get tag
        id: get_tag
        run: |
          echo ::set-output name=VERSION::${GITHUB_REF#refs/tags/}
          PREVIOUS_TAG=$(git tag --sort=-creatordate | sed -n 2p)
          echo "PREVIOUS_TAG: $PREVIOUS_TAG"
          COMMIT_SUMMARY="$(git log --oneline --pretty=tformat:"%h %s" $PREVIOUS_TAG..${{ github.ref }})"
          COMMIT_SUMMARY="${COMMIT_SUMMARY//$'\n'/'%0A'}"
          echo ::set-output name=COMMIT_SUMMARY::$COMMIT_SUMMARY

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.get_tag.outputs.VERSION }}
          release_name: Release ${{ steps.get_tag.outputs.VERSION }}
          body: |
            ${{ steps.get_tag.outputs.COMMIT_SUMMARY }}
          draft: false
          prerelease: false

  build:
    name: Build and upload
    needs: release
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-musl
            suffix: linux-x86_64
            ext: ''
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            suffix: windows-x86_64
            ext: .exe
          - os: macos-latest
            target: aarch64-apple-darwin
            suffix: darwin-aarch64
            ext: ''

    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Dependencies on Windows
        if: ${{ matrix.os == 'windows-latest' }}
        run: |
          choco install make --yes
      - name: Install Dependencies on MacOS
        if: ${{ matrix.os == 'macos-latest' }}
        run: |
          brew install make

      - name: Cache
        uses: Swatinem/rust-cache@v2

      - name: Build
        run: |
          rustup target add ${{ matrix.target }}
          cargo build --release --target ${{ matrix.target }} --verbose

      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: target/${{ matrix.target }}/release/mailhits${{ matrix.ext }}
          asset_name: mailhits-${{ matrix.suffix }}${{ matrix.ext }}
          tag: ${{ github.ref }}
          overwrite: true